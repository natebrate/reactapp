{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","color","SearchBox","placeholder","handleChange","type","onChange","App","onSearchChange","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filterMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAIcA,EAAO,SAACC,GAAD,OACjB,sBAAKC,UAAU,iBAAf,UACI,qBACIC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAEP,6BAAKL,EAAMI,QAAQE,OACnB,4BAAIN,EAAMI,QAAQG,YCNbC,EAAW,SAAAR,GAAK,OACzB,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OACvB,cAAC,EAAD,CAAMO,MAAM,UAA2BP,QAASA,GAArBA,EAAQC,UCLlCO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACIb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCoCHG,E,kDArCX,WAAYjB,GAAQ,IAAD,8BACf,cAAMA,IAaVkB,eAAiB,SAAAC,GAEb,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAdzC,EAAKC,MAAQ,CACTf,SAAU,GACVY,YAAY,IAJD,E,qDAQnB,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACX,SAAUoB,S,oBAQhD,WAAU,IAAD,EAC2BC,KAAKN,MAA9Bf,EADF,EACEA,SAAUY,EADZ,EACYA,YACXU,EAAiBtB,EAASuB,QAAO,SAAA5B,GAAO,OAC9CA,EAAQE,KAAK2B,cAAcC,SAASb,EAAYY,kBAEhD,OACQ,sBAAKhC,UAAU,MAAf,UACI,8CACA,cAAC,EAAD,CAAWY,YAAY,SACnBC,aAAcgB,KAAKZ,iBAGvB,cAAC,EAAD,CAAUT,SAAUsB,W,GAjCtBI,IAAMC,WCOTC,G,iBAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a96a7768.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport './card.style.css'\r\n\r\nexport const  Card = (props) => (\r\n    <div className='card-container'>\r\n        <img\r\n            alt=\"monster\"\r\n            src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}\r\n        />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);\r\n","import React from \"react\";\r\nimport './card-list-style.css'\r\n\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = props => (\r\n    <div className=\"card-list\">\r\n        {props.monsters.map(monster => (\r\n            <Card color=\"primary\" key={monster.id} monster={monster}/>\r\n        ))}\r\n    </div>\r\n);\r\n","import React from \"react\";\r\nimport './search-box.style.css'\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input\r\n        className=\"search\"\r\n        type='search'\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n);\r\n","import React, { Component } from \"react\";\nimport './App.css';\nimport {CardList} from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            monsters: [],\n            searchField:''\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then(response => response.json())\n            .then(users => this.setState({monsters: users}));\n    };\n\n    onSearchChange = event =>\n    {\n        this.setState({searchField: event.target.value});\n    };\n\n    render() {\n        const {monsters, searchField} = this.state;\n        const filterMonsters = monsters.filter(monster =>\n        monster.name.toLowerCase().includes(searchField.toLowerCase())\n        );\n        return (\n                <div className=\"App\">\n                    <h1>Monster List</h1>\n                    <SearchBox placeholder='search'\n                        handleChange={this.onSearchChange}\n                    />\n\n                    <CardList monsters={filterMonsters }/>\n                </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}