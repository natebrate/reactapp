{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nsbra\\\\WebstormProjects\\\\firstapp\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport './App.css';\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(users => this.setState({\n      monsters: users\n    }));\n  }\n\n  render() {\n    const {\n      monsters,\n      searchField\n    } = this.state;\n    const filterMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        placeholder: \"search name\",\n        onChange: e => this.setState({\n          searchField: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        place: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        monsters: filterMonsters\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/nsbra/WebstormProjects/firstapp/src/App.js"],"names":["React","Component","CardList","SearchBox","App","constructor","props","state","monsters","searchField","componentDidMount","fetch","then","response","json","users","setState","render","filterMonsters","filter","monster","name","toLowerCase","includes","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAAQC,QAAR,QAAuB,4CAAvB;AACA,SAASC,SAAT,QAA0B,8CAA1B;;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACC,SAAxB,CAAkC;AAE9BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,WAAW,EAAC;AAFH,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAACR,MAAAA,QAAQ,EAAEO;AAAX,KAAd,CAFnB;AAGH;;AAEDE,EAAAA,MAAM,GAAG;AACL,UAAM;AAACT,MAAAA,QAAD;AAAWC,MAAAA;AAAX,QAA0B,KAAKF,KAArC;AACA,UAAMW,cAAc,GAAGV,QAAQ,CAACW,MAAT,CAAgBC,OAAO,IAC9CA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCd,WAAW,CAACa,WAAZ,EAApC,CADuB,CAAvB;AAEA,wBACQ;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,WAAW,EAAC,aAFhB;AAGI,QAAA,QAAQ,EAAEE,CAAC,IAAI,KAAKR,QAAL,CAAc;AAACP,UAAAA,WAAW,EAAEe,CAAC,CAACC,MAAF,CAASC;AAAvB,SAAd;AAHnB;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,SAAD;AACI,QAAA,KAAK;AADT;AAAA;AAAA;AAAA;AAAA,cANJ,eAUI,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAER;AAApB;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADR;AAcH;;AAlC6B;;AAqClC,eAAed,GAAf","sourcesContent":["import React, { Component } from \"react\";\nimport './App.css';\nimport {CardList} from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\";\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            monsters: [],\n            searchField:''\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then(response => response.json())\n            .then(users => this.setState({monsters: users}));\n    };\n\n    render() {\n        const {monsters, searchField} = this.state;\n        const filterMonsters = monsters.filter(monster =>\n        monster.name.toLowerCase().includes(searchField.toLowerCase()))\n        return (\n                <div className=\"App\">\n                    <input\n                        type='search'\n                        placeholder='search name'\n                        onChange={e => this.setState({searchField: e.target.value})}\n                    />\n                    <SearchBox\n                        place\n                    />\n\n                    <CardList monsters={filterMonsters }/>\n                </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}